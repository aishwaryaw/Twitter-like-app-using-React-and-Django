{"version":3,"sources":["logo.svg","lookup/components.js","tweets/Buttons.js","profiles/components.js","tweets/Tweet.js","tweets/List.js","tweets/Create.js","tweets/feed.js","App.js","serviceWorker.js","profiles/utils.js","profiles/ProfileComponent.js","notifications/Notification.js","index.js","tweets/components.js","notifications/components.js"],"names":["module","exports","backendLookup","method","data","callback","endpoint","jsonData","JSON","stringify","xhr","XMLHttpRequest","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","url","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","ActionBtn","props","tweet","action","didPerformAction","actionDisplay","display","likes","type","onClick","id","content","apiActionTweet","UserLink","username","className","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","UserPicture","userIdSpan","ParentTweet","parent","Tweet","isretweet","retweeter","hideactions","didRetweet","useState","actiontweet","setActiontweet","path","pathname","regexid","match","groups","tweetid","isdetail","handlePerformAction","TweetsList","tweets","setTweets","tweetsinit","setTweetsinint","nexturl","setNexturl","tweetdidset","setTweetdidset","useEffect","apiTweetList","console","log","next","results","alert","final","newtweets","concat","a","undefined","replace","handleRetweet","newretweet","updateTweetsinit","unshift","updatedFinalTweets","map","index","key","preventDefault","temptweets","TweetCreate","didTweet","disabled","setDisabled","setTweet","onSubmit","value","onChange","target","FeedList","App","Boolean","hostname","DisplayCount","numeral","format","ProfileBadgeCompoenent","profile","didFollowToggle","currentVerb","is_following","following_count","follower_count","bio","Notification","notification","message","appEl","getElementById","ReactDOM","render","React","createElement","tweetsEl","setNewtweets","canTweet","newtweet","tempnewtweets","dataset","feedtweetsEl","tweetdetailEl","querySelector","tweetId","apiTweetDetail","profiledetailEl","setProfile","profileDidSet","setprofileDidSet","apiProfileDetail","notifications","setNotifications","didLookup","setDidLookup","handleNotificationsLookup","apiNotificationsLookup","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9843698d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n\r\nfunction backendLookup(method, data , callback , endpoint){\r\n\r\n    let jsonData;\r\n    if (data){\r\n      jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken');\r\n    const url = `http://localhost:8000/api/${endpoint}`\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\")\r\n\r\n    if(csrftoken){\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n\r\n    xhr.onload = function() {\r\n        if (xhr.status === 403) {\r\n          const detail = xhr.response.detail\r\n          if (detail === \"Authentication credentials were not provided.\"){\r\n            if (window.location.href.indexOf(\"login\") === -1) {\r\n              window.location.href = \"/login?showLoginRequired=true\"\r\n            }\r\n          }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n      }\r\n\r\n    xhr.onerror = function(e){\r\n        callback({\"message\" : \"The request was an error\"}, 400)\r\n\r\n    }\r\n\r\n    xhr.send(jsonData)\r\n\r\n}\r\n\r\nexport default backendLookup","import React , {useState} from 'react'\r\nimport { backendLookup } from '../lookup'\r\n\r\nfunction ActionBtn(props) {\r\n    const {tweet , action ,didPerformAction } = props\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n\r\n\r\n    const callback = (response , status) =>{\r\n\r\n        if((status == 200 || status == 201 ) && didPerformAction)\r\n        {\r\n            didPerformAction(response , status)\r\n        }\r\n    \r\n    }\r\n\r\n    const apiActionTweet = (callback) =>{\r\n\r\n        backendLookup(\"POST\" , {\"id\" : tweet.id, \"action\" : action.type , \"content\" : tweet.content } , callback , 'tweets/action/')\r\n\r\n    }\r\n\r\n    const handleAction = () =>{\r\n\r\n        apiActionTweet(callback)\r\n\r\n    }\r\n\r\n    const display = action.type == 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n\r\n    return (\r\n        <div>\r\n              <button onClick = {handleAction}>{display}</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionBtn\r\n","import React from 'react'\r\n\r\n\r\nexport function UserLink(props) {\r\n    const {username} = props\r\n\r\n    const handleLink = () =>{\r\n        // document.getElementById(\"tweetme-feed\").className = \"d-none\"\r\n        window.location.href = `/profiles/${username}` \r\n    }\r\n\r\n    return (\r\n    <span className=\"pointer\" onClick = {handleLink} >{props.children}</span>\r\n    \r\n    )\r\n}\r\n\r\n\r\nexport function UserDisplay(props){\r\n    const {user , includeFullName , hideLink} = props\r\n    const nameDisplay = includeFullName == true ? `${user.first_name} ${user.last_name}` : user.username\r\n    //console.log(user)\r\n        return (\r\n        <div>\r\n        {nameDisplay}\r\n        { hideLink == true ? `@${user.username}`  : <UserLink username = {user.username}>@{user.username}</UserLink> }\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport function UserPicture(props){\r\n\r\n    const {user , hideLink} = props\r\n    \r\n    const userIdSpan = <span className=\"mx-1 px-2 py-1 rounded-circle bg-dark text-white\">{user.username[0]}</span>\r\n    \r\n    return hideLink == true ? userIdSpan : <UserLink username = {user.username} >{userIdSpan}</UserLink>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React , {useState} from 'react'\r\nimport ActionBtn from './Buttons'\r\nimport {UserDisplay, UserPicture} from '../profiles/components'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return (\r\n       tweet.parent ? <Tweet isretweet tweet = {tweet.parent} retweeter = {props.retweeter} hideactions /> : null )\r\n    \r\n}\r\n\r\nfunction Tweet(props) {\r\n\r\n    const { tweet , didRetweet , isretweet , retweeter , hideactions } = props\r\n    const [ actiontweet, setActiontweet ] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    className = isretweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    const regexid = /(?<tweetid>\\d+)/\r\n    const match = path.match(regexid)\r\n    const id = match ? match.groups.tweetid : -1\r\n    const isdetail = `${id}` === `${tweet.id}`\r\n\r\n    //console.log(tweet)\r\n    \r\n\r\n    const handleLink = () =>{\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    \r\n\r\n    const handlePerformAction = (response , status) =>{\r\n        if(status == 200)\r\n            setActiontweet(response)\r\n\r\n        else if(status == 201){\r\n            didRetweet(response)\r\n        }\r\n    }\r\n   \r\n\r\n    return (\r\n      <div className={className}>\r\n        {isretweet === true && <div className='mb-2'>\r\n        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n      </div>}\r\n      <div className='d-flex'>\r\n     \r\n        <div className=''>\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className='col-11'>\r\n            <div>\r\n           \r\n              <p>\r\n                <UserDisplay includeFullName user={tweet.user} />\r\n              </p>\r\n              <p>{tweet.content}</p>\r\n             \r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n            {actiontweet && hideactions !== true ? \r\n            <div>\r\n            <ActionBtn tweet = {actiontweet} didPerformAction = {handlePerformAction} action = {{type : 'like' , display : 'likes' }}/>\r\n            <ActionBtn tweet = {actiontweet}  didPerformAction = {handlePerformAction} action = {{type : 'Unlike' , display : 'Unlike' }}/>\r\n            <ActionBtn tweet = {actiontweet}  didPerformAction = {handlePerformAction} action = {{type : 'retweet' , display : 'retweet' }}/>\r\n            </div> : null\r\n            }\r\n            { isdetail === true ? null :  <button onClick={handleLink} > view detail </button>  }\r\n        </div>\r\n        </div></div></div>\r\n    )\r\n}\r\n\r\nexport default Tweet\r\n\r\n\r\n\r\n","import React, {useState , useEffect } from 'react'\r\nimport {backendLookup} from '../lookup';\r\nimport Tweet from './Tweet'\r\n\r\nfunction TweetsList(props) {\r\n\r\n    const [tweets , setTweets ] = useState([])\r\n    const [tweetsinit , setTweetsinint] = useState([])\r\n    const [nexturl , setNexturl] = useState(null)\r\n    const [tweetdidset , setTweetdidset] = useState(false)\r\n    \r\n    useEffect(() => {\r\n\r\n        if( tweetdidset === false){\r\n \r\n         const handleTweetsListLookup = (response,status ) =>{\r\n \r\n             if(status == 200){\r\n                 console.log(response)\r\n                 setNexturl(response.next)\r\n                 setTweetsinint(response.results)\r\n                 setTweetdidset(true)\r\n             }\r\n \r\n             else{        \r\n                 alert('there was an error')\r\n              }\r\n             }\r\n     \r\n         apiTweetList( handleTweetsListLookup )\r\n        }\r\n         \r\n     }, [ tweetsinit , tweetdidset , setTweetdidset, props.username])\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        const final = [...props.newtweets].concat(tweetsinit)\r\n\r\n        if(final.length !== tweets.length)\r\n            setTweets(final)\r\n\r\n    }, [ props.newtweets , tweets, tweetsinit, props.username ])\r\n\r\n\r\n    const apiTweetList =  async(callback, nexturl) =>{\r\n\r\n        let endpoint = \"tweets/\"\r\n\r\n        if(nexturl != null || nexturl != undefined ){\r\n          endpoint = nexturl.replace(\"http://localhost:8000/api/\", \"\")\r\n        }\r\n\r\n        else if(props.username){\r\n            endpoint = `tweets/?username=${props.username}`\r\n            }\r\n\r\n        backendLookup(\"GET\" , null , callback , endpoint)\r\n      \r\n    }\r\n\r\n    const handleRetweet = (newretweet) => {\r\n        const updateTweetsinit = [...tweetsinit]\r\n        updateTweetsinit.unshift(newretweet)\r\n        setTweetsinint(updateTweetsinit)\r\n\r\n        const updatedFinalTweets = [...tweets]\r\n        updatedFinalTweets.unshift(tweets)\r\n        setTweets(updatedFinalTweets)\r\n    }\r\n\r\n\r\n    const handleLoadNext = (e)=>{\r\n\r\n        e.preventDefault()\r\n        if(nexturl != null){\r\n        const handleTweetsListLookupForPagination = (response, status)=>{\r\n            if(status == 200){\r\n            setNexturl(response.next)\r\n            let temptweets = [...tweets]\r\n            temptweets = temptweets.concat(response.results)\r\n            setTweetsinint(temptweets)\r\n            setTweets(temptweets)\r\n            }\r\n\r\n            else{\r\n                alert(\"there is an error\")\r\n            }\r\n\r\n        }\r\n        apiTweetList(handleTweetsListLookupForPagination, nexturl)\r\n    }\r\n    }\r\n \r\n    \r\n    return (\r\n        <div>\r\n            { tweets && tweets.map((tweet , index)=>{\r\n               return ( <Tweet className='my-5 py-5 border bg-white text-dark' key={index} \r\n               tweet = {tweet}\r\n               didRetweet = {handleRetweet} /> )\r\n            })}\r\n             { nexturl != null && <button onClick = {handleLoadNext} >Load next </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetsList\r\n","import React , {useState } from 'react'\r\nimport { backendLookup } from '../lookup'\r\n\r\nexport default function TweetCreate(props) {\r\n    const { didTweet } = props\r\n    const [disabled , setDisabled] = useState(true)\r\n\r\n    const [tweet, setTweet] = useState('')\r\n\r\n    const callback = (response, status) =>{\r\n        if(status == 201){\r\n\r\n            didTweet(response)\r\n\r\n        }\r\n        else if (status == 400){\r\n            alert(response.content[0])\r\n        }\r\n\r\n        else{\r\n            alert('There is an error')\r\n        }\r\n    }\r\n\r\n    const handleChange = (e)=>{\r\n        setTweet(e.target.value)\r\n        if(e.target.value !== ''){\r\n            setDisabled(false)\r\n        }\r\n        else{\r\n            setDisabled(true)\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        //console.log(tweet)\r\n        backendLookup(\"POST\", {content : tweet} , callback , 'tweets/create/')\r\n        setTweet('')\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"tweet\" value = {tweet} onChange= {handleChange} />\r\n            <button disabled={disabled} type=\"submit\">Add tweet</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n","import React, {useState , useEffect } from 'react'\r\nimport {backendLookup} from '../lookup';\r\nimport Tweet from './Tweet'\r\n\r\nfunction FeedList(props) {\r\n\r\n    const [tweets , setTweets ] = useState([])\r\n    const [tweetsinit , setTweetsinint] = useState([])\r\n    const [tweetdidset , setTweetdidset] = useState(false)\r\n    const [nexturl , setNexturl] = useState(null)\r\n    \r\n\r\n    useEffect(() => {\r\n        //console.log(props.newtweets)\r\n        const final = [...props.newtweets].concat(tweetsinit)\r\n\r\n        if(final.length !== tweets.length)\r\n            setTweets(final)\r\n\r\n    }, [ props.newtweets , tweets, tweetsinit  ])\r\n\r\n\r\n    const apiTweetList =  async(callback , nexturl) =>{\r\n        let endpoint = 'tweets/feed/'\r\n        if(nexturl != null || nexturl != undefined){\r\n            endpoint = nexturl.replace(\"http://localhost:8000/api/\", \"\")\r\n        }\r\n\r\n        backendLookup(\"GET\" , null , callback , endpoint)\r\n        \r\n    }\r\n \r\n    useEffect(() => {\r\n       \r\n       if( tweetdidset === false){\r\n\r\n        const handleTweetsListLookup = (response,status ) =>{\r\n\r\n            if(status == 200){\r\n                setTweetsinint(response.results)\r\n                setNexturl(response.next)\r\n                setTweetdidset(true)\r\n            }\r\n\r\n            else{    \r\n                console.log(response)    \r\n                alert('there was an error')\r\n             }\r\n            }\r\n    \r\n        apiTweetList( handleTweetsListLookup )\r\n       }\r\n        \r\n    }, [ tweetsinit , tweetdidset , setTweetdidset, props.username])\r\n\r\n    const handleRetweet = (newretweet) => {\r\n        const updateTweetsinit = [...tweetsinit]\r\n        updateTweetsinit.unshift(newretweet)\r\n        setTweetsinint(updateTweetsinit)\r\n\r\n        const updatedFinalTweets = [...tweets]\r\n        updatedFinalTweets.unshift(tweets)\r\n        setTweets(updatedFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (e)=>{\r\n        e.preventDefault()\r\n        if(nexturl != null){\r\n            const handleTweetsListLookupForPagination = (response, status)=>{\r\n                if(status == 200){\r\n                    setNexturl(response.next)\r\n                    let temptweets = [...tweets]\r\n                    temptweets = temptweets.concat(response.results)\r\n                    setTweets(temptweets)\r\n                    setTweetsinint(temptweets)\r\n\r\n                }\r\n\r\n                else{\r\n                    alert(\"therer is an error\")\r\n                }\r\n\r\n            }\r\n            apiTweetList(handleTweetsListLookupForPagination , nexturl)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { tweets && tweets.map((tweet , index)=>{\r\n               return <Tweet  key={`${index}-${tweet.id}`} \r\n               className='my-5 py-5 border bg-white text-dark'\r\n                key={index} \r\n               tweet = {tweet}\r\n               didRetweet = {handleRetweet} />\r\n            })}\r\n            { nexturl != null && <button onClick={handleLoadNext}>Load next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedList\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { TweetsComponents } from './tweets/components';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <TweetsComponents username=\"aish\" /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport numeral from 'numeral'\r\nfunction DisplayCount(props) {\r\n   \r\n    return (\r\n        <span>\r\n           {numeral(props.children).format(\"0a\")} \r\n        </span>\r\n    )\r\n}\r\n\r\nexport default DisplayCount\r\n","import React , {useState, useEffect} from 'react'\r\nimport { backendLookup } from '../lookup'\r\nimport { UserPicture, UserDisplay } from './components'\r\nimport DisplayCount from './utils'\r\n\r\nexport function ProfileBadgeCompoenent(props){\r\n    \r\n    const {profile , didFollowToggle} = props\r\n    const currentVerb = (profile && profile.is_following) ?  \"unfollow\" : \"follow\" \r\n\r\n    const FollowToggle = (e)=>{\r\n        e.preventDefault()\r\n        didFollowToggle(currentVerb)\r\n    }\r\n    \r\n    return profile ?  (\r\n    <div>\r\n     <UserPicture user= {profile} hideLink/>\r\n     <UserDisplay user = {profile} hideLink />\r\n     <p><DisplayCount>{profile.following_count}</DisplayCount> following </p>\r\n     <DisplayCount>{profile.follower_count}</DisplayCount> {profile.follower_count == 1 ? \"follower\" : \"followers\"}\r\n     <p>{profile.bio}</p>\r\n     <p>{profile.location}</p>\r\n\r\n     <button onClick = {FollowToggle}>{currentVerb}</button>\r\n    \r\n    </div>\r\n\r\n    ) : null\r\n\r\n}\r\n\r\n\r\nexport function ProfileComponent(props) {\r\n     \r\n    const {username} = props\r\n    console.log(username)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileDidSet, setprofileDidSet] = useState(false)\r\n\r\n    const callback = (response , status) => {\r\n          \r\n        if(status == 200){\r\n            setProfile(response)\r\n            setprofileDidSet(true)\r\n        }\r\n    }\r\n\r\n   const handleFollowToggle = (action)=>{\r\n\r\n    backendLookup(\"POST\" , {\"action\": action} , callback , `profiles/${username}/`)\r\n\r\n   }\r\n\r\n    const apiProfileDetail = (callback) =>{\r\n        backendLookup(\"GET\", null , callback , `profiles/${username}/`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(profileDidSet == false){\r\n       \r\n        apiProfileDetail(callback)\r\n    }\r\n        \r\n    }, [profileDidSet, setprofileDidSet])\r\n\r\n    return (\r\n    profileDidSet === false ? <p>Loading...</p> : <ProfileBadgeCompoenent profile = {profile} didFollowToggle = {handleFollowToggle} /> \r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Notification(props) {\r\n\r\n    const {notification} = props\r\n    \r\n    return (\r\n        <div>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { TweetsComponent, TweetDetailCompoent, FeedComponent } from './tweets/components';\nimport {ProfileComponent} from './profiles/ProfileComponent'\nimport { NotificationComponent } from './notifications/components';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme')\nif(tweetsEl){\n ReactDOM.render(\n  e(TweetsComponent , tweetsEl.dataset) , tweetsEl);\n}\n\nconst feedtweetsEl = document.getElementById('tweetme-feed')\nif(feedtweetsEl){\n  ReactDOM.render(\n    e(FeedComponent , feedtweetsEl.dataset) , feedtweetsEl );\n  \n}\n\n// const tweetDetailElements = document.querySelectorAll(\".tweetme-detail\")\n\n// tweetDetailElements.forEach(container=> {\n//     ReactDOM.render(\n//         e(TweetDetailCompoent, container.dataset), \n//         container);\n// })\n\n//or\n\nconst tweetdetailEl = document.querySelector('.tweetme-detail')\nif(tweetdetailEl){\nReactDOM.render(\n  e(TweetDetailCompoent , tweetdetailEl.dataset) , tweetdetailEl\n);\n}\n\nconst profiledetailEl = document.querySelector(\".tweetme-profile-detail\")\nif(profiledetailEl){\n  ReactDOM.render(\n    e(ProfileComponent , profiledetailEl.dataset) , profiledetailEl\n  );\n}\n\nconst notifications = document.getElementById(\"tweetme-notifications\")\nif(notifications){\n  ReactDOM.render(\n    e(NotificationComponent , notifications.dataset) , notifications\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from 'react'\r\nimport TweetList from './List'\r\nimport TweetCreate from './Create'\r\nimport { backendLookup } from '../lookup'\r\nimport Tweet from './Tweet'\r\nimport FeedList from './feed'\r\n\r\nexport function TweetsComponent(props) {\r\n\r\n    const [newtweets, setNewtweets ] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n\r\n    const handleNewTweet = (newtweet) => {\r\n       \r\n        let tempnewtweets = [...newtweets]\r\n        tempnewtweets.unshift(newtweet)\r\n        setNewtweets(tempnewtweets)\r\n        // console.log('components')\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n        {canTweet && <TweetCreate didTweet = {handleNewTweet}/> }\r\n        <TweetList newtweets = {newtweets} {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function TweetDetailCompoent(props){\r\n\r\n    const {tweetId} = props\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const callback = (response , status) => {\r\n        if(status == 200) {\r\n            setTweet(response)\r\n        }\r\n        else{\r\n            alert('there is an error')\r\n            window.location.href = \"/\"\r\n        }\r\n    }\r\n\r\n    const apiTweetDetail = (callback) => {\r\n        backendLookup(\"GET\", null , callback , `tweets/${tweetId}/` )\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiTweetDetail(callback)\r\n    }, [])\r\n      \r\n\r\n    return tweet == null ? null : <Tweet tweet= {tweet} />\r\n\r\n}\r\n\r\n\r\nexport function FeedComponent(props){\r\n\r\n    const [newtweets , setNewtweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n\r\n    const handleNewTweet = (newtweet) =>{\r\n        console.log(newtweet)\r\n        let tempnewtweets = [...newtweets]\r\n        tempnewtweets.unshift(newtweet)\r\n        setNewtweets(tempnewtweets)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n    { canTweet === true ? <TweetCreate didTweet = {handleNewTweet}/> : null }\r\n    <FeedList newtweets = {newtweets}  />\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { backendLookup } from '../lookup'\r\nimport Notification from './Notification'\r\n\r\nexport function NotificationComponent() {\r\n    const [notifications , setNotifications] = useState([])\r\n    const [didLookup, setDidLookup] = useState(false)\r\n\r\n    const apiNotificationsLookup = (handleNotificationsLookup) =>{\r\n        backendLookup(\"GET\", null , handleNotificationsLookup , \"profiles/notifications/\")\r\n        //backendLookup(\"GET\", null , handleNotificationsLookup , \"notifications/updateNotifications/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        const handleNotificationsLookup = (response , status) =>{\r\n            if(status == 200){\r\n                setNotifications(response)\r\n                setDidLookup(true)\r\n\r\n            }\r\n\r\n            else{\r\n                alert(\"there is an error with your notifications\")\r\n            }\r\n\r\n        }\r\n\r\n        apiNotificationsLookup(handleNotificationsLookup)\r\n        \r\n    }, [])\r\n\r\n    return (\r\n       \r\n        <div>\r\n            {didLookup == false  ? <p>loading...</p> : notifications.map((notification , index) =>{\r\n                return <Notification key = {`${index}- ${notification.id}`} notification = {notification} />\r\n            })}\r\n\r\n            {didLookup && notifications.length === 0 ? <p>No notifications</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}